@page "/settings"
@layout Layout.EmptyLayout
@inject BusinessSmartMobile.Services.SettingsService ApiSettings
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-4">
    <MudCard Elevation="4">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5">
                    <MudIcon Icon="@Icons.Material.Filled.Settings" Class="mr-2" />
                    Backend API Ayarları
                </MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <!-- Güvenlik Uyarısı -->
            @if (!string.IsNullOrEmpty(NewApiUrl) && NewApiUrl.StartsWith("http://"))
            {
                <MudAlert Severity="Severity.Warning" Class="mb-4">
                    <MudText Typo="Typo.body2">
                        <strong>⚠️ Güvenlik Uyarısı:</strong> HTTP kullanıyorsunuz. 
                        Veri güvenliği için HTTPS kullanmanız önerilir.
                    </MudText>
                </MudAlert>
            }
            else if (!string.IsNullOrEmpty(NewApiUrl) && NewApiUrl.StartsWith("https://"))
            {
                <MudAlert Severity="Severity.Success" Class="mb-4">
                    <MudText Typo="Typo.body2">
                        <strong>✓ Güvenli Bağlantı:</strong> HTTPS kullanıyorsunuz.
                    </MudText>
                </MudAlert>
            }

            <!-- API URL Input -->
            <MudTextField 
                @bind-Value="NewApiUrl" 
                Label="Backend API Adresi" 
                Variant="Variant.Outlined"
                Placeholder="http://192.168.1.119:4909"
                HelperText="Şirketinizin backend sunucu adresini girin"
                Class="mb-4" />

            <!-- Örnek Format -->
            <MudText Typo="Typo.caption" Color="Color.Secondary" Class="mb-4">
                <strong>Örnek format:</strong><br/>
                • http://192.168.1.100:4909<br/>
                • https://api.sirketiniz.com<br/>
                • http://sunucu.local:8080
            </MudText>

            <!-- Mevcut Ayar -->
            <MudDivider Class="my-4" />
            <MudText Typo="Typo.body2" Color="Color.Secondary">
                <strong>Mevcut API Adresi:</strong><br/>
                <code>@ApiSettings.GetApiBaseUrl()</code>
            </MudText>
        </MudCardContent>
        <MudCardActions>
            <MudButton 
                OnClick="SaveApiUrl" 
                Variant="Variant.Filled" 
                Color="Color.Primary" 
                StartIcon="@Icons.Material.Filled.Save"
                FullWidth="true">
                Kaydet ve Çıkış Yap
            </MudButton>
        </MudCardActions>
    </MudCard>

    <!-- İpuçları -->
    <MudCard Elevation="2" Class="mt-4">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-2" />
                    Önemli Notlar
                </MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudText Typo="Typo.body2" Class="mb-2">
                • API adresini değiştirdikten sonra yeniden giriş yapmanız gerekir
            </MudText>
            <MudText Typo="Typo.body2" Class="mb-2">
                • HTTPS kullanımı veri güvenliği için önerilir
            </MudText>
            <MudText Typo="Typo.body2">
                • Sunucu adresi port numarası ile birlikte girilmelidir
            </MudText>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private string NewApiUrl;

    protected override void OnInitialized()
    {
        NewApiUrl = ApiSettings.GetApiBaseUrl();
    }

    private void SaveApiUrl()
    {
        if (string.IsNullOrWhiteSpace(NewApiUrl))
        {
            Snackbar.Add("Lütfen geçerli bir API adresi girin!", Severity.Error);
            return;
        }

        // URL validation
        if (!NewApiUrl.StartsWith("http://") && !NewApiUrl.StartsWith("https://"))
        {
            Snackbar.Add("API adresi http:// veya https:// ile başlamalıdır!", Severity.Error);
            return;
        }

        ApiSettings.SetApiBaseUrl(NewApiUrl);
        
        // HTTPS uyarısı
        if (NewApiUrl.StartsWith("https://"))
        {
            Snackbar.Add("✓ Güvenli bağlantı ayarlandı!", Severity.Success);
        }
        else
        {
            Snackbar.Add("⚠️ HTTP kullanıyorsunuz. HTTPS önerilir.", Severity.Warning);
        }

        // Login sayfasına yönlendir
        Navigation.NavigateTo("/", true);
    }
}
